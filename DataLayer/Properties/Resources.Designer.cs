//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DataLayer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use master
        ///
        ///                            SET ANSI_WARNINGS OFF
        ///                            SET NOCOUNT ON
        ///
        ///                            --Create table for Backups and Space check verification
        ///                            Create table #tDetails (
        ///                            DBName  varchar(100),
        ///                            TapeFull datetime null,
        ///                            TapeDiff datetime null,
        ///                            DiskFull datetime null,
        ///                            DiskDiff datetime null,        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DatabaseBackups {
            get {
                return ResourceManager.GetString("DatabaseBackups", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use master
        ///                            SET ANSI_WARNINGS OFF
        ///                            SET NOCOUNT ON
        ///
        ///
        ///                            --Create table for Backups and Space check verification
        ///                            Create table #tDetails (
        ///                            DBName  varchar(100),
        ///                            DBSizeMB float null,
        ///                            DBGrowth varchar(10) null,
        ///                            AvailableSpaceMB float null
        ///                            ) 
        ///
        ///
        ///
        ///           [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DatabaseFiles {
            get {
                return ResourceManager.GetString("DatabaseFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select d.name, compatibility_level,state_desc, user_access_desc, recovery_model_desc, collation_name, page_verify_option_desc,
        ///                            is_read_only,
        ///                            is_auto_close_on,
        ///                            is_auto_shrink_on,
        ///                            is_auto_create_stats_on,
        ///                            is_auto_update_stats_on,
        ///                            is_fulltext_enabled,
        ///                            is_db_chaining_on,
        ///                            is_trustwort [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DatabaseOptions {
            get {
                return ResourceManager.GetString("DatabaseOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use master
        ///
        ///                            SET ANSI_WARNINGS OFF
        ///                            SET NOCOUNT ON
        ///
        ///                            CREATE TABLE #DBFileStats
        ///                            (
        ///                            [DBName] VARCHAR(128),
        ///                            [DBID] INT,
        ///                            [LogicalName] SYSNAME,
        ///                            [FileID] INT,
        ///                            [FileName] VARCHAR(255),
        ///                            [FileGroup] VARCHAR(100),
        ///                   [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DatabaseSize {
            get {
                return ResourceManager.GetString("DatabaseSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [master]
        ///                            DECLARE @isCmdShellEnabled BIT;
        ///                            DECLARE @isShowAdvanced BIT;
        ///
        ///                            SELECT @isCmdShellEnabled = CAST(value AS BIT) FROM sys.configurations
        ///                            WHERE name = &apos;xp_cmdshell&apos;;
        ///
        ///                            SELECT @isShowAdvanced = CAST(value AS BIT) FROM sys.configurations
        ///                            WHERE name = &apos;show advanced options&apos;;
        ///
        ///                            IF (@isShowAdvanced = 0) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string DriveSpace {
            get {
                return ResourceManager.GetString("DriveSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use master
        ///                            SELECT UPPER(SSP.name) LoginName,SSP.type_desc as &apos;Type&apos;,UPPER(SSPS.name) ServerRole,
        ///                            SSP.is_disabled
        ///                            ,SSP.default_database_name 
        ///                            FROM sys.server_principals SSP  
        ///                            INNER JOIN sys.server_role_members SSRM 
        ///                            ON SSP.principal_id=SSRM.member_principal_id  
        ///                            INNER JOIN sys.server_principals SSPS 
        ///        [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoginMembership {
            get {
                return ResourceManager.GetString("LoginMembership", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to dbcc sqlperf(logspace).
        /// </summary>
        internal static string LogSize {
            get {
                return ResourceManager.GetString("LogSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to USE [master]
        ///                            DECLARE @isCmdShellEnabled BIT;
        ///                            DECLARE @isShowAdvanced BIT;
        ///
        ///                            SELECT @isCmdShellEnabled = CAST(value AS BIT) FROM sys.configurations
        ///                            WHERE name = &apos;xp_cmdshell&apos;;
        ///
        ///                            SELECT @isShowAdvanced = CAST(value AS BIT) FROM sys.configurations
        ///                            WHERE name = &apos;show advanced options&apos;;
        ///
        ///                            IF (@isShowAdvanced = 0) [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string PowerPlan {
            get {
                return ResourceManager.GetString("PowerPlan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT  
        ///                            SERVERPROPERTY(&apos;MachineName&apos;) AS ComputerName,
        ///                            SERVERPROPERTY(&apos;ServerName&apos;) AS InstanceName,  
        ///                            SERVERPROPERTY(&apos;Edition&apos;) AS Edition,
        ///                            SERVERPROPERTY(&apos;ProductVersion&apos;) AS ProductVersion,  
        ///                            SERVERPROPERTY(&apos;ProductLevel&apos;) AS ProductLevel,
        ///                            SERVERPROPERTY(&apos;IsIntegratedSecurityOnly&apos;) as AuthMode,
        ///                            create_da [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServerProperties {
            get {
                return ResourceManager.GetString("ServerProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to select net_transport, auth_scheme, local_tcp_port 
        ///from sys.dm_exec_connections
        ///where session_id = @@SPID.
        /// </summary>
        internal static string SeverProperties_Port {
            get {
                return ResourceManager.GetString("SeverProperties_Port", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to declare @sql nvarchar(max)
        ///							declare @version decimal(5,3)
        ///							declare @ProductLevel char(3)
        ///							select @ProductLevel = cast(serverproperty(&apos;ProductLevel&apos;) as char(3))
        ///							select @version = cast(left(cast(serverproperty(&apos;productversion&apos;) as varchar), 4) as decimal(5, 3))
        ///                            if @version &gt; 10.500 
        ///                            set @sql = N&apos;select cpu_count, physical_memory_kb / 1024 as &apos;&apos;Memory (MB)&apos;&apos;, sqlserver_start_time, virtual_machine_type_desc from sys.dm_os_sy [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SysOSInformation {
            get {
                return ResourceManager.GetString("SysOSInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT MAX([max server memory (MB)]) [max server memory (MB)],
        ///                            MAX([min server memory (MB)]) [min server memory (MB)],
        ///                            MAX([backup compression default]) [backup compression default],
        ///                            MAX([max degree of parallelism]) [max degree of parallelism], 
        ///                            MAX([xp_cmdshell]) [xp_cmdshell]
        ///                            FROM (
        ///	                            select * from sys.configurations
        ///	                 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string SystemConfiguration {
            get {
                return ResourceManager.GetString("SystemConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to use master
        ///                            CREATE TABLE #temp (
        ///                            DBName Nvarchar(100),
        ///                            UserName NVARCHAR(100),
        ///                            GroupName NVARCHAR(100),
        ///                            LoginName NVARCHAR(100),
        ///                            DefDBName nvarchar(100),
        ///                            DefSchemaName nvarchar(100),
        ///                            UserID char(10)
        ///                            )
        ///
        ///
        ///                            --create statement [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string UserMembership {
            get {
                return ResourceManager.GetString("UserMembership", resourceCulture);
            }
        }
    }
}
